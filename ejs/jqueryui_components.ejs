<script type="text/template" id="templ">
	<h1>HEADER 1</h1>
	<h2>HEADER 2</h2>
	<h3>HEADER 3</h3>
	<h4>HEADER 4</h4>
	<h5>HEADER 5</h5>
	<h6>HEADER 6</h6>
</script>

<style>
	section {
		display: flex;
		justify-content: space-between;
		font-family: 'Helvetica Neue', Helvetica, sans-serif;
	}

	section>div.right {
		flex-grow: 1;
		padding: 10px;
		overflow: auto;
	}

	div.right hr:last-child {
		margin-bottom: 40px;
	}

	section>div.left {
		background-color: #f5f2f2;
		min-width: 150px;
		max-width: 150px;
		border-right: 1px solid #999;
	}

	section>div.left ul {
		position: fixed;
		top: 10px;
		left: 10px;
		list-style: none;
		line-height: 25px;
		padding: 5px;
	}

	ul a {
		color: #444;
	}

	.selected {
		color: #6F00FF;
		font-weight: bold;
	}

	h1 {
		color: #6F00FF;
		padding: 40px 0 10px;
	}

	hr {
		border-color: #5b87ac;
		border-style: dotted;
		margin-top: 30px;
	}

	.icon:before {
		background-image: url(<%- baseStaticPath %>/images/flags.png);
		background-position: -112px -224px;
	}

	.custom, .custom * {
		color: red !important;
		text-decoration: underline;
	}

	.border, .textstyle {
		border: 1px solid green;
	}

	.textstyle {
		min-height: 100px;
		width: 400px;
	}

	.code {
		border: 1px solid #ccc;
		border-radius: 3px;
		background: #f9f9f9;
		margin: 20px 0;
		padding: 20px;
		text-align: left;
	}

	p {
		padding: 10px;
		line-height: 20px;
		text-align: left;
	}

	.tabStyle > div {
		height: 300px;
	}

	.code .cid {
		color: #4a86ef;
		font-weight: bold;
	}

	.code .key {
		font-weight: bolder;
	}

	.code .val {
		color: #f2576d;
	}

	.code i {
		color: #20891c;
		font-weight: bold;
	}
</style>

<%
	var icon = baseStaticPath + '/images/indigo.png';

	var customDay = [1,2,3,4,5,6,7],
		customMonth = ['J1','F2','M3','A4','M5', 'J6', 'J7', 'A8', 'S9', 'O10', 'N11', 'D12'];

	var loremIpsum = 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.';

	var templ = `<b>&lt;script</b> type="<b>text/template</b>" id="<i>templ</i>"&gt;<br/>
		&emsp;&lt;h1&gt;<span class="val">HEADER 1</span>&lt;/h1&gt;<br/>
		&emsp;&lt;h2&gt;<span class="val">HEADER 2</span>&lt;/h2&gt;<br/>
		&emsp;&lt;h3&gt;<span class="val">HEADER 3</span>&lt;/h3&gt;<br/>
		&emsp;&lt;h4&gt;<span class="val">HEADER 4</span>&lt;/h4&gt;<br/>
		&emsp;&lt;h5&gt;<span class="val">HEADER 5</span>&lt;/h5&gt;<br/>
		&emsp;&lt;h6&gt;<span class="val">HEADER 6</span>&lt;/h6&gt;<br/>
	<b>&lt;/script&gt;</b><br/><br/>`;

	var availableTags = [
		"ActionScript",
		"AppleScript",
		"Asp",
		"BASIC",
		"C",
		"C++",
		"Clojure",
		"COBOL",
		"ColdFusion",
		"Erlang",
		"Fortran",
		"Groovy",
		"Haskell",
		"Java",
		"JavaScript",
		"Lisp",
		"Perl",
		"PHP",
		"Python",
		"Ruby",
		"Scala",
		"Scheme"
	];

	function code(cid, params, before, after) {
		before = before || '';
		after = after || '';
		var opts = [];
		for (var key in params) {
			opts.push(`<span class="key">${key}</span>: <span class="val">${params[key]}</span>`);
		}
		return `<div class="code">
			${before}
			<b>&lt;%- $(</b>'<span class="cid">${cid}</span>', {${opts.join(', ')}} <b>) %&gt;</b>
			${after}
		</div>`;
	}
%>
<div class="left">
	<ul>
		<li><a href="#accordion">Accordion</a></li>
		<li><a href="#autocomplete">Autocomplete</a></li>
		<li><a href="#button">Button</a></li>
		<li><a href="#checkbox">Checkbox</a></li>
		<li><a href="#datepicker">Datepicker</a></li>
		<li><a href="#dialog">Dialog</a></li>
		<li><a href="#dropdown">Dropdown</a></li>
		<li><a href="#menu">Menu</a></li>
		<li><a href="#radio">Radio</a></li>
		<li><a href="#progressbar">Progressbar</a></li>
		<li><a href="#slider">Slider</a></li>
		<li><a href="#spinner">Spinner</a></li>
		<li><a href="#tabs">Tabs</a></li>
		<li><a href="#tooltip">Tooltip</a></li>
	</ul>
</div>
<div class="right">
	<h1>jQuery UI Widgets</h1>
	<h1 id="accordion">Accordion</h1>
	<p>
		Click headers to expand/collapse content that is broken into logical sections, much like tabs. Optionally, toggle sections open/closed on mouseover.

		The underlying HTML markup is a series of headers (H3 tags) and content divs so the content is usable without JavaScript.
	</p>
	<div ig-ns="accordion">
		<p>
			<b>Example:</b>
			Default header
		</p>
		<%- code('juiAccordion', {labels: `[<i>'Label1'</i>, <i>'Label2'</i>, <i>'Label3'</i>]`}) %>
		<%- $('juiAccordion', {labels: ['Label1', 'Label2', 'Label3']}) %><hr/>

		<p>
			<b>Example:</b>
			Customizing content, multiple selection, and default view index
		</p>
		<%- code('juiAccordion', {labels: `['Label1', 'Label2', 'Label3']`, contents: `[<i>'View1'</i>, <i>'View2'</i>, <i>'View3'</i>]`, multiple: `<i>true</i>`, selectedIndex: `<i>1</i>`}) %>
		<%- $('juiAccordion', {labels: ['Label1', 'Label2', 'Label3'], contents: ['View1', 'View2', 'View3'], multiple: true, selectedIndex: 1}) %><hr/>

		<p>
			<b>Example:</b>
			Replacing content with available templates
		</p>
		<%- code('juiAccordion', {labels: `['Label1', 'Label2', 'Label3']`, contents: `['View1', 'View2', 'View3']`, templates: `[<i>'#templ'</i>, null, <i>'#templ'</i>]`}, templ) %>
		<%- $('juiAccordion', {labels: ['Label1', 'Label2', 'Label3'], contents: ['View1', 'View2', 'View3'], templates: ['#templ', null, '#templ']}) %><hr/>
	</div>

	<h1 id="autocomplete">Autocomplete</h1>
	<p>
		The Autocomplete widgets provides suggestions while you type into the field. Here the suggestions are tags for programming languages, give "ja" (for Java or JavaScript) a try.

		The datasource is a simple JavaScript array, provided to the widget using the source-option.
	</p>
	<div ig-ns="autocomplete">
		<p>
			<b>Example:</b>
		</p>
		<%- code('juiAutocomplete', {availableTags: `[<i>'${availableTags.join('\', \'')}'</i>]`}) %>
		<%- $('juiAutocomplete', {availableTags: availableTags.join(',')}) %><hr/>
	</div>

	<h1 id="button">Button</h1>
	<p>
		The Button component allows the user to easily  interact with the interface and navigate through an application. By default the Button is rectangular, however the style attributes can be modified to change shape and color and to specify labels and icons to clearly convey what action will be  carried out. Each button is associated with a handler method which listens for a specified event and calls a particular function when triggered.
	</p>
	<div ig-ns="button">
		<p>
			<b>Example:</b>
			Default Button
		</p>
		<%- code('juiButton', {label: `<i>'Hello World - 1'</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 1`}) %><hr/>

		<p>
			<b>Example:</b>
			Left-Aligning icon
		</p>
		<%- code('juiButton', {label: `'Hello World - 2'`, icon: `<i>'${icon}'</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 2`, icon: icon}) %><hr/>

		<p>
			<b>Example:</b>
			Right-Aligning Icon
		</p>
		<%- code('juiButton', {label: `'Hello World - 3'`, icon: `'${icon}'`, icon_align: `<i>'right'</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 3`, icon: icon, icon_align: 'right'}) %><hr/>

		<p>
			<b>Example:</b>
			Customizing style
		</p>
		<%- code('juiButton', {label: `'Hello World - 4'`, style: `<i>'color: green; font-weight: bold'</i>`, icon_class: `<i>'ui-icon-gear'</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 4`, style: 'color: green; font-weight: bold', icon_class: 'ui-icon-gear'}) %><hr/>

		<p>
			<b>Example:</b>
			Assigning component id and class name
		</p>
		<%- code('juiButton', {label: `'Hello World - 5'`, id: `<i>'mybutton'</i>`, class: `<i>'custom'</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 5`, id: 'mybutton', class: 'custom'}) %><hr/>

		<p>
			<b>Example:</b>
			Using disabled property
		</p>
		<%- code('juiButton', {label: `'Hello World - 6'`, class: `'custom'`, disabled: `<i>true</i>`}) %>
		<%- $('juiButton', {label: `Hello World - 6`, class: 'custom', disabled: true}) %><hr/>
	</div>

	<h1 id="checkbox">Checkbox</h1>
	<p>
		<p>The Checkbox is a square-shaped component that stores a <em>boolean</em> value based on the userâ€™s input. If the user does not interact with the component, the boolean value will remain default. The <code>checked</code> attribute is used to set the default value of the Checkbox, and the <code>disabled</code> attribute is used to prevent the user from changing the value. Checkbox will retain its styling across platforms. </p>
	</p>
	<div ig-ns="checkbox">
		<p>
			<b>Example:</b>
			Default Checkbox
		</p>
		<%- code('juiCheckbox', {label: `<i>'Hello World - 1'</i>`}) %>
		<%- $('juiCheckbox', {label: `Hello World - 1`}) %><hr/>

		<p>
			<b>Example:</b>
			Using checked attribute
		</p>
		<%- code('juiCheckbox', {label: `'Hello World - 2'`, checked: `<i>true</i>`}) %>
		<%- $('juiCheckbox', {label: `Hello World - 2`, checked: true}) %><hr/>

		<p>
			<b>Example:</b>
			Custom styling Checkbox
		</p>
		<%- code('juiCheckbox', {label: `'Hello World - 4'`, style: `<i>'color: green; font-weight: bold'</i>`}) %>
		<%- $('juiCheckbox', {label: `Hello World - 4`, style: 'color: green; font-weight: bold'}) %><hr/>

		<p>
			<b>Example:</b>
			Assigning component id and class name
		</p>
		<%- code('juiCheckbox', {label: `'Hello World - 5'`, id: `<i>'mycheckbox'</i>`, class: `<i>'custom'</i>`}) %>
		<%- $('juiCheckbox', {label: `Hello World - 5`, id: 'mycheckbox', class: 'custom'}) %><hr/>

		<p>
			<b>Example:</b>
			Disabling Checkbox
		</p>
		<%- code('juiCheckbox', {label: `'Hello World - 6'`, class: `'custom'`, disabled: `<i>true</i>`}) %>
		<%- $('juiCheckbox', {label: `Hello World - 6`, class: 'custom', disabled: true}) %><hr/>
	</div>

	<h1 id="datepicker">Datepicker</h1>
	<p>
	The Datepicker component provides the user with a convenient way to select dates. The Datepicker control is displayed as a text input field with a calendar icon on its right side. Upon clicking the icon, the user is presented with a <code>CalendarControl</code>, from which they can scroll through months and years to select a specific date. Once a date has been selected, the <code>CalendarControl</code> will collapse and the Datepicker control will be populated with the selected date. If the user does not select a date, they can click the icon to collapse the calendar control and leave the Datepicker in its previous state. The Datepicker component can be customized to include prompts and styling attributes.

	</p>
	<div ig-ns="datepicker">
		<p>
			<b>Example:</b>
			Default Datepicker
		</p>
		<%- code('juiDatepicker') %>
		<%- $('juiDatepicker') %><hr/>

		<p>
			<b>Example:</b>
			Defining prompt text
		</p>
		<%- code('juiDatepicker', {prompt: `<i>'Select a date'</i>`}) %>
		<%- $('juiDatepicker', {prompt: 'Select a date'}) %><hr/>

		<p>
			<b>Example:</b>
			Setting time using milliseconds
		</p>
		<%- code('juiDatepicker', {timestamp:`<i>Date.now()</i>`}) %>
		<%- $('juiDatepicker', {timestamp: Date.now()}) %><hr/>

		<p>
			<b>Example:</b>
			Customizing style
		</p>
		<%- code('juiDatepicker', {timestamp: `new Date(2012, 0, 25).getTime()`, style: `<i>'color: green; font-weight: bold'</i>`}) %>
		<%- $('juiDatepicker', {timestamp: new Date(2012, 0, 25).getTime(), style: 'color: green; font-weight: bold'}) %><hr/>

		<p>
			<b>Example:</b>
			Customizing days of week
		</p>
		<%- code('juiDatepicker', {days: `<i>${JSON.stringify(customDay)}</i>`, months: `<i>${JSON.stringify(customMonth)}</i>`}) %>
		<%- $('juiDatepicker', {days: customDay, months: customMonth}) %><hr/>

		<p>
			<b>Example:</b>
			Disabling Datepicker
		</p>
		<%- code('juiDatepicker', {prompt: `'Disabled'`, class: `'custom'`, disabled: `<i>true</i>`}) %>
		<%- $('juiDatepicker', {prompt: 'Disabled', class: 'custom', disabled: true}) %><hr/>
	</div>

	<h1 id="dialog">Dialog</h1>
	<p>
		The Dialog component creates a modal with three distinct sections: header, footer, and content. Each can be customized to display specified information to the user. The Dialog box covers a part of the UI and can be used for short messages and quick decisions (such as error messages and password confirmation). User flows that require more in-depth information would be better-suited for full-screen.
	</p>
	<div ig-ns="dialog">
		<p>
			<b>Example:</b>
			Default Dialog
		</p>
		<%- code('juiDialog', {id: `'dlg_default'`}) %>
		<%- $('juiDialog', {id: 'dlg_default'}) %>
		<%- $('juiButton', {label: 'Default Dialog', attrs: {dialog_id: 'dlg_default'}} ) %><hr/>

		<p>
			<b>Example:</b>
			Defining title, content and footer buttons
		</p>
		<%- code('juiDialog', {id: `'dlg_custom'`, title: `<i>'Dialog Title'</i>`, content: `<i>'Dialog Content'</i>`, 
			buttons: `<i>[{label:'OK', event: 'ok'}, {label: 'Close', event: 'close'}]</i>`}) %>
		<%- $('juiDialog', {id: 'dlg_custom', title: 'Dialog Title', content: 'Dialog Content', 
			buttons: [{label:'OK', event: 'ok'}, {label: 'Close', event: 'close'}]}) %>
		<%- $('juiButton', {label: 'Custom Dialog', attrs: {dialog_id: 'dlg_custom'}} ) %><hr/>
	</div>

	<h1 id="dropdown">Dropdown</h1>
	<p>
		The Dropdown component provides the user with a collapsible list of options from which they can select a single value. The default value can be set using <code>selectedIndex</code>. If no value is specified, it can be set with <code>prompt</code>.

	</p>
	<div ig-ns="dropdown">
		<p>
			<b>Example:</b>
			Default Dropdown
		</p>
		<%- code('juiDropdown', {id: `'mydropdown'`}) %>
		<%- $('juiDropdown', {id: 'mydropdown'}) %><hr/>

		<p>
			<b>Example:</b>
			Using menu items, selecting index and expanding by default
		</p>
		<%- code('juiDropdown', {menus: `[<i>'Menu1'</i>, <i>'Menu2'</i>, <i>'Menu3'</i>]`, selectedIndex: `<i>1</i>`}) %>
		<%- $('juiDropdown', {menus: ['Menu1', 'Menu2', 'Menu3'], selectedIndex: 1}) %><hr/>

		<p>
			<b>Example:</b>
			Setting default prompt and customizing style
		</p>
		<%- code('juiDropdown', {prompt: `<i>'Hello World - 1'</i>`, class: `<i>'custom'</i>`}) %>
		<%- $('juiDropdown', {prompt: `Hello World - 1`, class: 'custom'}) %><hr/>

		<p>
			<b>Example:</b>
			Setting menu as an array of objects using a pre-defined <code>label</code> labelField
		</p>
		<%- code('juiDropdown', {prompt: `'Hello World - 2'`, menus: `[{<i>label</i>: 'Menu1'}, {<i>label</i>: 'Menu2', <i>selected: true</i>}, {<i>label</i>: 'Menu3'}]`}) %>
		<%- $('juiDropdown', {prompt: `Hello World - 2`, menus: [{label: 'Menu1'}, {label: 'Menu2', selected: true}, {label: 'Menu3'}]}) %><hr/>

		<p>
			<b>Example:</b>
			Setting menu as an array of objects using customized labelField
		</p>
		<%- code('juiDropdown', {menus: `[{<i>lbl</i>: 'Menu1'}, {<i>lbl</i>: 'Menu2'}, {<i>lbl</i>: 'Menu3'}]`, labelField: `<i>'lbl'</i>`, selectedIndex: 1}) %>
		<%- $('juiDropdown', {menus: [{lbl: 'Menu1'}, {lbl: 'Menu2'}, {lbl: 'Menu3'}], labelField: 'lbl', selectedIndex: 1}) %><hr/>

		<%
			function customItemRenderer(menu, opts, defaultItemRenderer, index) {
				return `<option data="%DATA%" menu-class="custom" icon-class="ui-icon${menu.$get('icon')}"${menu.$attr('style', 'menu-style')}${menu.$attr('icon_style', 'icon-style')}>%LABEL%</option>`;
			}
		%>

		<p>
			<b>Example:</b>
			Using customized <code>itemRenderer</code> and <code>labelRenderer</code>
		</p>
		<%- code('juiDropdown', {menus: `[
			{lf: 'Menu1', icon: 'ui-icon-script'}, {lf: 'Menu2', icon: '<i>ui-icon-image</i>', style: '<i>color: green !important; font-weight: bold</i>'}, {lf: 'Menu3', icon_style: '<i>background-image: url(/static/images/indigo.png); background-size: contain</i>', selected: true}]`, 
			labelField: 'lf', itemRenderer: `<i>customItemRenderer</i>`}) %>

		<%- $('juiDropdown', {menus: [
			{lf: 'Menu1', icon: 'ui-icon-script'}, {lf: 'Menu2', icon: 'ui-icon-image', style: 'color: green !important; font-weight: bold'}, {lf: 'Menu3', icon_style: 'background-image: url(/static/images/indigo.png); background-size: contain', selected: true}], 
			labelField: 'lf', itemRenderer: customItemRenderer}) %><hr/>

		<p>
			<b>Example:</b>
			Default Dropdown
		</p>
		<%- code('juiDropdown', {prompt: `'Hello World - 3'`, class: `'custom'`, disabled: `<i>true</i>`}) %>
		<%- $('juiDropdown', {prompt: `Hello World - 3`, class: 'custom', disabled: true}) %><hr/>
	</div>

	<h1 id="menu">Menu</h1>
	<p>
		The Menu is a navigation component that contains links to other pages or bookmarks. By default, this control is a horizontal top-level menu bar that can contain pop-up sub-menus. The Menu automatically adapts to whichever platform it is being run on, however can be customized. The top-level menu is generally visible at all times. Open sub-menus disappear as the user selects an item or clicks outside of the menu.
	</p>
	<div ig-ns="menu">
		<p>
			<b>Example:</b>
			Creating custom menu
		</p>
		<%- code('juiMenu', {menus: `[{label: 'Save', class: '<i>ui-icon ui-icon-disk</i>'}, {label: 'Zoom In', class: '<i>ui-icon ui-icon-zoomin</i>'}, {label: 'Zoom Out', class: '<i>ui-icon ui-icon-zoomout</i>'}, {label: 'Print...', class: '<i>ui-icon ui-icon-print</i>', disabled: <i>true</i>}]`}) %>

		<%- $('juiMenu', {menus: [{label: 'Save', class: 'ui-icon ui-icon-disk'}, {label: 'Zoom In', class: 'ui-icon ui-icon-zoomin'}, {label: 'Zoom Out', class: 'ui-icon ui-icon-zoomout'}, {label: 'Print...', class: 'ui-icon ui-icon-print', disabled: true}]}) %><hr/>

		<p>
			<b>Example:</b>
			Selecting menu by index and defining custom <code>labelField</code>
		</p>
		<%- code('juiMenu', {menus: `[{<i>lbl</i>: 'Menu 1'}, {<i>lbl</i>: 'Menu 2'}]`, labelField: `<i>'lbl'</i>`}) %>
		<%- $('juiMenu', {menus: [{lbl: 'Menu 1'}, {lbl: 'Menu 2'}], labelField: 'lbl'}) %><hr/>

		<p>
			<b>Example:</b>
			Creating menu using <code>itemRenderer</code>
		</p>
		<%- code('juiMenu', {menus: `[{lbl: 'Menu 1'}, {label: 'Menu 2'}]`, itemRenderer: `function() { return <i>&grave;&lt;li style="padding: 5px"&gt;&lt;input type="checkbox"/&gt;%LABEL%&lt;/li&gt;&grave;</i>}`}) %>
		<%- $('juiMenu', {menus: [{label: 'Menu 1'}, {label: 'Menu 2'}], itemRenderer: function() { return `<li style="padding: 5px"><input type="checkbox"/>%LABEL%</li>`}}) %><hr/>

		<p>
			<b>Example:</b>
			Creating sub menus
		</p>
		<%- code('juiMenu', {menus: `<i>'[{label: 'Menu 1', sub: [
					{label: 'Sub1', class: 'custom'}, {label: 'Sub2', sub: [
						{label: 'Sub3'}
					]}
				]
			}]'</i>`}) %>
		<%- $('juiMenu', {menus: [{label: 'Menu 1', sub: [
					{label: 'Sub1', class: 'custom'}, {label: 'Sub2', sub: [
						{label: 'Sub3'}
					]}
				]
			}]}) %><hr/>
	</div>

	<h1 id="radio">Radio</h1>
	<p>
		The Radio is an input component which contains a boolean value, similar to the Checkbox. Unlike the Checkbox, Radio buttons are generally part of a group. Radio buttons can be grouped using the IndigoJs <code>radiogroup</code> component or <code>group</code> property. Exactly one button must be selected from the Radio group. Radio buttons are styled differently across platforms.
	</p>
	<div ig-ns="radio">
		<p>
			<b>Example:</b>
			Label and checked attributes
		</p>
		<%- code('juiRadio', {label: `<i>'Hello World - 1'</i>`, checked: `<i>true</i>`}) %>
		<%- $('juiRadio', {label: `Hello World - 1`, checked: true}) %><hr/>

		<p>
			<b>Example:</b>
			Grouping radio buttons by group name
		</p>
		<%- code('juiRadio', {label: `'Hello World - 3'`, group: `<i>'group_buttons'</i>`, checked: true}, `<b>&lt;%- $(</b>'<span class="cid">juiRadio</span>', {<b>label</b>: <span class="val">'Hello World - 2'</span>, <b>group</b>: <i>'group_buttons'</i><b>}) %&gt;</b><br/>`) %>
		<%- $('juiRadio', {label: `Hello World - 2`, group: 'group_buttons'}) %><br/>
		<%- $('juiRadio', {label: `Hello World - 3`, group: 'group_buttons', checked: true}) %><hr/>

		<p>
			<b>Example:</b>
			Grouping radio buttons by using <code>radiogroup</code>
		</p>
		<%- code('juiRadio', {label: `'Hello World - 5'`, group: `'group_yes_no'`, value: `<i>'no'</i>`, class: `'custom'`}, `<b>&lt;%- $(</b>'<span class="cid">juiRadio</span>', {<b>label</b>: <span class="val">'Hello World - 4'</span>, <b>group</b>: <span class="val">'group_yes_no'</span>, <b>value</b>: <i>'yes'</i>, <b>style</b>: <span class="val">'color: green; font-weight: bold'</span><b>}) %&gt;</b><br/>`) %>
		<%- $('juiRadio', {label: `Hello World - 4`, group: 'group_yes_no', value: 'yes', style: 'color: green; font-weight: bold'}) %><br/>
		<%- $('juiRadio', {label: `Hello World - 5`, group: 'group_yes_no', value: 'no', class: 'custom'}) %><hr/>

		<p>
			<b>Example:</b>
			Disabling radio button
		</p>
		<%- code('juiRadio', {label: `'Hello World - 6'`, class: `'custom'`, disabled: `<i>true</i>`}) %>
		<%- $('juiRadio', {label: `Hello World - 6`, class: 'custom', disabled: true}) %>
	</div>

	<h1 id="progressbar">Progressbar</h1>
	<p>
		The progress bar is designed to display the current percent complete for a process. The bar is coded to be flexibly sized through CSS and will scale to fit inside its parent container by default.

		A determinate progress bar should only be used in situations where the system can accurately update the current status. A determinate progress bar should never fill from left to right, then loop back to empty for a single process â€” if the actual status cannot be calculated, an indeterminate progress bar should be used to provide user feedback.
	</p>
	<div ig-ns="progressbar">
		<p>
			<b>Example:</b>
			Default determinate progress bar.
		</p>
		<%- code('juiProgressbar') %>
		<%- $('juiProgressbar') %><hr/>

		<p>
			<b>Example:</b>
			Custom updated label demo.
		</p>
		<%- code('juiProgressbar', {label: '<i>Loading...</i>',  value: `<i>40</i>`, style: '<i>color: green</i>'}) %>
		<%- $('juiProgressbar', {label: 'Loading...',  value: 40, style: 'color: green'}) %><hr/>

		<script>
			var pb;
			window.progress = function() {
				if ($) {
					if (!pb) {
						pb = $('#myProgressbar>pre');
					}
					var val = pb.progressbar('value') || 0;
					pb.progressbar('value', val + 10);
					if (val < 99) {
						setTimeout(window.progress, 1000);
					}
				}
			}
		</script>

		<p>
			<b>Example:</b>
			Custom class.
		</p>
		<%- code('juiProgressbar', {label: 'Waiting...', complete: '<i>Complete!</i>', value: 0, class: '<i>custom</i>'}) %>
		<%- $('juiProgressbar', {id: 'myProgressbar', label: 'Waiting...', complete: 'Complete!', value: 0, class: 'custom'}) %><hr/>
		<button onclick="window.progress()">Start Download</button>
	</div>

	<h1 id="slider">Slider</h1>
	<p>
		Like the Checkbox, a Switch component holds a boolean value. The Switch allows the user to turn a particular setting or feature on or off. This component can be customized with styling properties as well as certain attributes (such as <code>disabled</code> and <code>checked</code>) to control its behavior.
	</p>
	<div ig-ns="slider">
		<p>
			<b>Example:</b>
			Default slider
		</p>
		<%- code('juiSlider') %>
		<%- $('juiSlider') %><hr/>

		<p>
			<b>Example:</b>
			Setting title and changing state
		</p>
		<%- code('juiSlider', {value: `<i>10</i>`}) %>
		<%- $('juiSlider', {value: 10}) %><hr/>

		<p>
			<b>Example:</b>
			Setting title and changing state
		</p>
		<%- code('juiSlider', {handle: `<i>true</i>`, value: `<i>100</i>`, min: `<i>50</i>`, max: `<i>150</i>`}) %>
		<%- $('juiSlider', {handle: true, value: 100, min: 50, max: 150}) %><hr/>
	</div>

	<h1 id="spinner">Spinner</h1>
	<p>
		Like the Checkbox, a Switch component holds a boolean value. The Switch allows the user to turn a particular setting or feature on or off. This component can be customized with styling properties as well as certain attributes (such as <code>disabled</code> and <code>checked</code>) to control its behavior.
	</p>
	<div ig-ns="spinner">
		<p>
			<b>Example:</b>
			Default spinner
		</p>
		<%- code('juiSpinner') %>
		<%- $('juiSpinner') %><hr/>

		<p>
			<b>Example:</b>
			Setting title and changing state
		</p>
		<%- code('juiSpinner', {value: `<i>10</i>`, style: '<i>color: green; font-weight: bold</i>'}) %>
		<%- $('juiSpinner', {value: 10, style: 'color: green; font-weight: bold'}) %><hr/>

		<p>
			<b>Example:</b>
			Setting title and changing state
		</p>
		<%
			var globalize = `<b>&lt;script</b> type="<b>text/javascript</b>" src="<i>http://jqueryui.com/resources/demos/external/globalize/globalize.js</i>"<b>&gt;&lt;/script&gt;</b><br/>`;

			var globalizeJP = `<b>&lt;script</b> type="<b>text/javascript</b>" src="<i>http://jqueryui.com/resources/demos/external/globalize/globalize.culture.ja-JP.js</i>"<b>&gt;&lt;/script&gt;</b><br/><br/>`;
		%>
		<%- code('juiSpinner', {value: 300, min: `<i>100</i>`, max: `<i>500</i>`, step: `<i>25</i>`, numberFormat: '<i>C</i>', culture: '<i>ja-JP</i>'}, [globalize, globalizeJP].join('')) %>
		<%- $('juiSpinner', {value: 300, min: 100, max: 500, step: 25, numberFormat: 'C', culture: 'ja-JP'}) %><hr/>

		<p>
			<b>Example:</b>
			Setting title and changing state
		</p>
		<%- code('juiSpinner', {value: 100, class: '<i>custom</i>', disabled: `<i>true</i>`}) %>
		<%- $('juiSpinner', {value: 100, class: 'custom', disabled: true}) %><hr/>
	</div>

	<h1 id="tabs">Tabs</h1>
	<p>
		
		The tab component allows for a multi-tabbed interface. Each tab is associated with a particular view. The user can navigate between views by clicking on their respective tabs. The tab contents can be set with labels and predefined templates. When the user clicks a new tab, the previously displayed view will be hidden completely prior to loading the new one.
	</p>
	<div ig-ns="tabs">
		<p>
			<b>Example:</b>
			Setting header tabs
		</p>
		<%- code('juiTabs', {labels: `<i>['Label1', 'Label2', 'Label3']</i>`}) %>
		<%- $('juiTabs', {labels: ['Label1', 'Label2', 'Label3']}) %><hr/>

		<p>
			<b>Example:</b>
			Setting tab content and apply selected index
		</p>
		<%- code('juiTabs', {labels: `['Label1', 'Label2', 'Label3']`, contents: `<i>['View1', 'View2', 'View3']</i>`, selectedIndex: `<i>1</i>`}) %>
		<%- $('juiTabs', {labels: ['Label1', 'Label2', 'Label3'], contents: ['View1', 'View2', 'View3'], selectedIndex: 1}) %><hr/>

		<p>
			<b>Example:</b>
			Using predefined templates
		</p>
		<%- code('juiTabs', {labels: `['Label1', 'Label2', 'Label3']`, contents: `['View1', 'View2', 'View3']`, templates: `[<i>'#templ'</i>, null, <i>'#templ'</i>]`}, templ) %>
		<%- $('juiTabs', {labels: ['Label1', 'Label2', 'Label3'], contents: ['View1', 'View2', 'View3'], templates: ['#templ', null, '#templ'], class: 'tabStyle'}) %><hr/>
	</div>

	<h1 id="tooltip">Tooltip</h1>
	<p>
		The ToolTip functions to provide the user with helpful information. The ToolTip pops up when the user mouses over a particular element, providing information about that element. It can be customized with position settings and styling. If no porition is specified, the Tooltip will automatically position itself relative to its parent container's boundaries.
	</p>
	<div ig-ns="tooltip">
		<center>
			<p>
				<b>Example:</b>
				Setting tooltip top left
			</p>
			<%- code('juiTooltip', {target: `<i>'#topLeft'</i>`, position: `<i>'top-left'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Top Left'</i>, <b>id</b>: <i>'topLeft'</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Top Left', id: 'topLeft', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#topLeft', position: 'top-left'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip top right
			</p>
			<%- code('juiTooltip', {target: `<i>'#topRight'</i>`, position: `<i>'top-right'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Top Right'</i>, <b>id</b>: <i>'topRight'</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Top Right', id: 'topRight', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#topRight', position: 'top-right'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip top center
			</p>
			<%- code('juiTooltip', {target: `<i>'#topCenter'</i>`, position: `<i>'top'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Top Center'</i>, <b>id</b>: <i>'topCenter'</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Top Center', id: 'topCenter', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#topCenter', position: 'top'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip bottom left
			</p>
			<%- code('juiTooltip', {target: `<i>'#bottomLeft'</i>`, position: `<i>'bottom-left'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Bottom Left'</i>, <b>id</b>: <i>'bottomLeft'</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Bottom Left', id: 'bottomLeft', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#bottomLeft', position: 'bottom-left'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip bottom right
			</p>
			<%- code('juiTooltip', {target: `<i>'#bottomRight'</i>`, position: `<i>'bottom-right'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Bottom Right'</i>, <b>id</b>: <i>'bottomRight</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Bottom Right', id: 'bottomRight', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#bottomRight', position: 'bottom-right'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip bottom center
			</p>
			<%- code('juiTooltip', {target: `<i>'#bottomCenter'</i>`, position: `<i>'bottom'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Bottom Center'</i>, <b>id</b>: <i>'bottomCenter</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Bottom Center', id: 'bottomCenter', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#bottomCenter', position: 'bottom'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip left top
			</p>
			<%- code('juiTooltip', {target: `<i>'#leftTop'</i>`, position: `<i>'left-top'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Left Top'</i>, <b>id</b>: <i>'leftTop</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Left Top', id: 'leftTop', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#leftTop', position: 'left-top'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip left bottom
			</p>
			<%- code('juiTooltip', {target: `<i>'#leftBottom'</i>`, position: `<i>'left-bottom'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Left Bottom'</i>, <b>id</b>: <i>'leftBottom</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Left Bottom', id: 'leftBottom', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#leftBottom', position: 'left-bottom'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip left middle
			</p>
			<%- code('juiTooltip', {target: `<i>'#leftMiddle'</i>`, position: `<i>'left'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Left Middle'</i>, <b>id</b>: <i>'leftMiddle</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Left Middle', id: 'leftMiddle', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#leftMiddle', position: 'left'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip right top
			</p>
			<%- code('juiTooltip', {target: `<i>'#rightTop'</i>`, position: `<i>'right-top'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Right Top'</i>, <b>id</b>: <i>'rightTop</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Right Top', id: 'rightTop', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#rightTop', position: 'right-top'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip right top
			</p>
			<%- code('juiTooltip', {target: `<i>'#rightBottom'</i>`, position: `<i>'right-bottom'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Right Bottom'</i>, <b>id</b>: <i>'rightBottom</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Right Bottom', id: 'rightBottom', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#rightBottom', position: 'right-bottom'}) %><hr/>

			<p>
				<b>Example:</b>
				Setting tooltip right top
			</p>
			<%- code('juiTooltip', {target: `<i>'#rightMiddle'</i>`, position: `<i>'right'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Right Middle'</i>, <b>id</b>: <i>'rightMiddle</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Right Middle', id: 'rightMiddle', class: 'border'}) %>
			<%- $('juiTooltip', {target: '#rightMiddle', position: 'right'}) %><hr/>

			<p>
				<b>Example:</b>
				Defining text in tooltip, multiple target selectors and auto position
			</p>
			<%- code('juiTooltip', {value: `<i>'targets should display the same tooltip'</i>`, target: `<i>'#mulSel1, .mulSel2'</i>`, style: `<i>'color: green; font-weight: bold'</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Text 1'</i>, <b>id</b>: <i>'mulSel1</i>}<b>) %&gt;</b><br><b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <i>'Text 2'</i>, <b>class</b>: <i>'mulSel2</i>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: 'Text 3', class: 'mulSel3 border', parentStyle: 'float: right'}) %>
			<%- $('juiText', {value: 'Text 1', id: 'mulSel1', class: 'border', parentStyle: 'float: left'}) %>
			<center><%- $('juiText', {value: 'Text 2', class: 'mulSel2 border'}) %></center>
			<br/>
			<%- $('juiTooltip', {value: 'targets should display the same tooltip', target: '#mulSel1, .mulSel2, .mulSel3', style: 'color: green; font-weight: bold'}) %><hr/>

			<p>
				<b>Example:</b>
				Auto scrolling
			</p>
			<%- code('juiTooltip', {position: 'right', target: `<i>'.rightText'</i>`, width: `'250px'`, height: `'200px'`, scroll: `<i>100</i>`, scrollTimeout: `<i>700</i>`}, `<b>&lt;%- $(</b>'<span class="cid">juiText</span>', {<b>value</b>: <span class="val">'Lorem ipsum dolor sit amet...'</span>, <b>class</b>: <i>'rightText</i>, height: <span class="val">94</span>, ellipsis: <span class="val">true</span>}<b>) %&gt;</b><br>`) %>
			<%- $('juiText', {value: loremIpsum, class: 'rightText textstyle', height: 94, ellipsis: true}) %>
			<%- $('juiTooltip', {position: 'right', target: '.rightText', width: '250px', height: '200px', scroll: 100, scrollTimeout: 700}) %><hr/>
		</center>
	</div>
</div>

<%- $finalize() %>